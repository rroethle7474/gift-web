trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - README.md
      - .gitignore

variables:
  # Build Configuration
  nodeVersion: '20.x'
  buildConfiguration: '--configuration=production'

  # Automatic version number generation
  major: '1'
  minor: '0'

  # Build version variable
  ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    buildVersion: $(major).$(minor).$(Build.BuildId)
  ${{ else }}:
    buildVersion: $(major).$(minor).$(Build.BuildId)-$(Build.SourceBranchName)

  # Note: TEST_API_URL, PROD_API_URL, and AppInsights connection strings
  # should be defined in Azure DevOps Pipeline variables UI

stages:
- stage: Build
  jobs:
  - job: BuildApp
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(nodeVersion)
      displayName: 'Install Node.js'

    - script: |
        npm install -g @angular/cli
        npm ci
      displayName: 'Install Dependencies'

    # Test Environment Build and Token Replacement
    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      inputs:
        targetFiles: 'src/environments/environment.test.ts'
        tokenPattern: 'hash'  # This matches #{TOKEN}# pattern
        writeBOM: true
      displayName: 'Replace Tokens in Test Environment'
      env:
        TEST_API_URL: $(TEST_API_URL)
        BUILD_VERSION: $(BUILD_VERSION)
        TEST_APPINSIGHTS_CONNECTION_STRING: $(TEST_APPINSIGHTS_CONNECTION_STRING)

    - script: |
        ng build --configuration=test
      displayName: 'Build Angular App (Test)'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/christmas-gift-app/browser'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/test-app.zip'
      displayName: 'Archive Test Build'

    # Production Environment Build and Token Replacement
    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      inputs:
        targetFiles: 'src/environments/environment.production.ts'
        tokenPattern: 'hash'  # This matches #{TOKEN}# pattern
        writeBOM: true
      displayName: 'Replace Tokens in Production Environment'
      env:
        PROD_API_URL: $(PROD_API_URL)
        BUILD_VERSION: $(BUILD_VERSION)
        PROD_APPINSIGHTS_CONNECTION_STRING: $(PROD_APPINSIGHTS_CONNECTION_STRING)

    - script: |
        ng build --configuration=production
      displayName: 'Build Angular App (Prod)'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/christmas-gift-app/browser'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/prod-app.zip'
      displayName: 'Archive Production Build'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish Build Artifacts'

- stage: DeployTest
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployTest
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'test'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              npm install -g pm2
            displayName: 'Install PM2'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Gift-Web-Connector'
              appName: 'test-gift-web-rpr'
              package: '$(Pipeline.Workspace)/drop/test-app.zip'
              startUpCommand: 'pm2 start server.js --no-daemon'

- stage: DeployProd
  dependsOn: DeployTest
  condition: succeeded()
  jobs:
  - deployment: DeployProd
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Gift-Web-Connector'
              appName: 'prod-gift-web-rpr'
              package: '$(Pipeline.Workspace)/drop/prod-app.zip'
              startUpCommand: 'node server.js'
